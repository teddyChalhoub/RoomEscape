"use strict";var precacheConfig=[["/RoomEscape/index.html","790c2be8074aa7ec2a3cebeaf837b561"],["/RoomEscape/static/css/main.49ce4b4d.css","66b5e47a5f74743d9731d8c0f9c26179"],["/RoomEscape/static/js/0.fbb9fff4.chunk.js","efdb3be48d6b4ed6b4922f3ed3846f72"],["/RoomEscape/static/js/main.8688aaad.js","995675d98de09807514158eb8071fcc7"],["/RoomEscape/static/media/1$.fc548135.jpeg","fc548135c81158ee62dff2de81716311"],["/RoomEscape/static/media/bar.4d162b02.jpeg","4d162b0236357ebecfc4402e15f24708"],["/RoomEscape/static/media/carLeaving.eb7d6eb1.wav","eb7d6eb14540c94767db6a26275e8cdf"],["/RoomEscape/static/media/dead.159e9179.jpg","159e9179f3df6d3389364d4a74232926"],["/RoomEscape/static/media/gameOver.7390343b.wav","7390343ba7a5715e763f37930a2510af"],["/RoomEscape/static/media/hint.2d36636d.ogg","2d36636dbc2b71112cd602d2d91aca2a"],["/RoomEscape/static/media/leaveBuilding.34fd903f.jpg","34fd903fe33344bea7e6f93777740137"],["/RoomEscape/static/media/party.557ca59b.jpg","557ca59b5fb46d5e298c36c4aa0a8fb6"],["/RoomEscape/static/media/poison.562647cd.jpeg","562647cd563d170132ec3033ff4d4898"],["/RoomEscape/static/media/prison.dd66f5d6.jpeg","dd66f5d61573fcbe3b7048a1b9666b7d"],["/RoomEscape/static/media/redSubstance.2a1c7fd2.jpeg","2a1c7fd229d2e663782d8468032b0d7d"],["/RoomEscape/static/media/riddle1.f469d3a5.jpeg","f469d3a5637d744812c2145298ca159d"],["/RoomEscape/static/media/riddle2.dd0dc2c1.jpg","dd0dc2c12d2f88e44b11038e4bacb24c"],["/RoomEscape/static/media/terms.45a2003d.jpeg","45a2003d2e0341776f922be250c608b5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/RoomEscape/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});